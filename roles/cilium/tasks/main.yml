
- name: Set Architecture Alias
  set_fact:
    arch_alias: >-
      {% if ansible_architecture == 'x86_64' %}amd64{% elif ansible_architecture == 'aarch64' %}arm64{% else %}{{ ansible_architecture }}{% endif %}


# - name: Downloading Cilium Cli
#   amazon.aws.s3_object:
#     endpoint_url: "{{ s3_endpoint_url }}"
#     access_key: "{{ s3_access_key }}"
#     secret_key: "{{ s3_secret_key }}"
#     bucket: "{{ s3_bucket_name }}"
#     object: "cilium/cilium-cli/{{ cilium_cli_version }}/linux/cilium-linux-{{ arch_alias }}.tar.gz"
#     dest: "/tmp/cilium-linux-{{ arch_alias }}.tar.gz"
#     mode: get
#     overwrite: different
#   async: 6000
#   poll: 100
#   retries: 5
#   delay: 10


# - name: Install Cilium Cli
#   ansible.builtin.shell: | 
#     tar -xf /tmp/cilium-linux-{{ arch_alias }}.tar.gz -C /usr/local/bin/
#     chmod +x /usr/local/bin/cilium

- name: Downloading Cilium Helm Chart
  amazon.aws.s3_object:
    endpoint_url: "{{ s3_endpoint_url }}"
    access_key: "{{ s3_access_key }}"
    secret_key: "{{ s3_secret_key }}"
    bucket: "{{ s3_bucket_name }}"
    object: "cilium/cilium/cilium-{{ cilium_version| replace('v', '') }}.tgz"
    dest: "{{ playbook_dir }}/.ansible_temp/cilium-{{ cilium_version| replace('v', '') }}.tgz"
    mode: get
    overwrite: different
  delegate_to: localhost
  run_once: true

- name: Copy  Cilium Helm Chart To Remote Host
  ansible.builtin.copy:
    src: "{{ playbook_dir }}/.ansible_temp/cilium-{{ cilium_version| replace('v', '') }}.tgz"
    dest: "/tmp/cilium-{{ cilium_version| replace('v', '') }}.tgz"

- name: Install Cilium
  kubernetes.core.helm:
    chart_ref: "/tmp/cilium-{{ cilium_version| replace('v', '') }}.tgz"
    name: cilium
    chart_version: "{{cilium_version}}"
    wait: false
    # state: absent
    release_namespace: kube-system
    values:
      nodePort:
        enabled: true
      k8sServiceHost: "{{ansible_default_ipv4.address}}"
      k8sServicePort: "6443"
      kubeProxyReplacement: "true"
      bpf:
        lbExternalClusterIP: true
      operator:
        image:
          tag: "{{ cilium_version }}"
          repository: quay.io/cilium/operator
          useDigest: false
          suffix: ""
        replicas: 1
      image:
        repository: quay.io/cilium/cilium
        tag: "{{ cilium_version }}"
        useDigest: false
      ingressController:
        enabled: "{{ true if ingress_controller == 'cilium' else false }}"
        default: "{{ true if ingress_controller == 'cilium' else false }}"
        loadbalancerMode: shared
        service:
          type: NodePort
          # -- Configure a specific nodePort for insecure HTTP traffic on the shared LB service
          insecureNodePort: 30080
          # -- Configure a specific nodePort for secure HTTPS traffic on the shared LB service
          secureNodePort : 30443
      envoy:
        enabled: true
        # image: 
        #   tag: "{{ cilium_envoy_version }}"
        #   repository: "quay.io/cilium/cilium-envoy"
        #   useDigest: false



