# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: emqx-local-pv
# spec:
#   capacity:
#     storage: 2Gi
#   volumeMode: Filesystem
#   accessModes:
#     - ReadWriteOnce
#   persistentVolumeReclaimPolicy: Delete
#   local:
#     path: /mnt/data/emqx
#   nodeAffinity:
#     required:
#       nodeSelectorTerms:
#         - matchExpressions:
#             - key: kubernetes.io/hostname
#               operator: In
#               values:
#                 - "{{ groups['schedulernode'] | random  }}"

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: emqx-pvc
  namespace: "{{ middware_namespace }}"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: emqx
  namespace: "{{ middware_namespace }}"
  labels:
    app: emqx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: emqx
  template:
    metadata:
      labels:
        app: emqx
    spec:
      containers:
      - name: emqx
        image: reg.guideirai.online/base/emqx:{{emqx_version}}
        imagePullPolicy: Always
        ports:
        - containerPort: 1883
        - containerPort: 8083
        - containerPort: 8084
        - containerPort: 8883
        - containerPort: 18083
        volumeMounts:
        - name: emqx-data
          mountPath: /opt/emqx/data
        - name: emqx-data
          mountPath: /opt/emqx/log
      imagePullSecrets:
        - name: regcred
      volumes:
      - name: emqx-data
        persistentVolumeClaim:
          claimName: emqx-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: emqx-service
  namespace: "{{ middware_namespace }}"
  labels:
    app: emqx
spec:
  selector:
    app: emqx
  ports:
  - name: mqtt
    port: 1883
    targetPort: 1883
  - name: mqtt-ws
    port: 8083
    targetPort: 8083
  - name: mqtt-wss
    port: 8084
    targetPort: 8084
  - name: mqtt-tls
    port: 8883
    targetPort: 8883
  - name: dashboard
    port: 18083
    targetPort: 18083
  type: LoadBalancer

---
apiVersion: v1
kind: Service
metadata:
  name: emqx-nodeport
  namespace: "{{ middware_namespace }}"
  labels:
    app: emqx
spec:
  selector:
    app: emqx
  ports:
  - name: mqtt
    port: 1883
    targetPort: 1883
    nodePort: 31883
  - name: mqtt-ws
    port: 8083
    targetPort: 8083
    nodePort: 38083
  - name: mqtt-wss
    port: 8084
    targetPort: 8084
    nodePort: 38084
  - name: mqtt-tls
    port: 8883
    targetPort: 8883
    nodePort: 38883
  - name: dashboard
    port: 18083
    targetPort: 18083
    nodePort: 31808
  type: NodePort