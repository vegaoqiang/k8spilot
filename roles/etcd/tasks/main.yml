---

# - name: Create Soft Directory
#   file:
#     path: /root/soft
#     state: directory
#     mode: 0755
#     recurse: yes

- name: Set Architecture Alias
  set_fact:
    arch_alias: >-
      {% if ansible_architecture == 'x86_64' %}amd64{% elif ansible_architecture == 'aarch64' %}arm64{% else %}{{ ansible_architecture }}{% endif %}


- name: Downloading Etcd {{ etcd_version }}
  ansible.builtin.get_url:
    url: "{{ download_location }}/etcd/{{ etcd_version }}/linux/{{ arch_alias }}/etcd-{{ etcd_version }}-linux-{{ arch_alias }}.tar.gz"
    dest: /tmp/
    mode: '0755'
    timeout: 60
  async: 6000
  poll: 10


- name: Add Etcd User
  user:
    name: "{{ etcd_user }}"
    home: "{{ etcd_home }}"
    shell: /sbin/nologin
    system: yes

- name: Create Etcd Dirctory
  file: 
    path: "{{ etcd_home }}/{{item}}"
    state: directory
    mode: 0755 
    recurse: yes
    owner: "{{ etcd_user }}"
    group: "{{ etcd_user }}"
  with_items:
  - 'bin'
  - 'data'
  - 'etc'
  - 'ssl'

- name: Make Etcd Config
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ etcd_user }}"
    group: "{{ etcd_user }}"
    mode: 0644
  with_items:
  - { src: "etcd.service.j2", dest: "/usr/lib/systemd/system/etcd.service" }
  - { src: "etcd.conf.yaml", dest: "{{ etcd_home }}/etc/etcd.conf.yaml" }
  - { src: "etcd-csr.json", dest: "{{ etcd_home }}/ssl/etcd-csr.json" }
  tags: conf


- name: Copy SSL And Config
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ etcd_user }}"
    group: "{{ etcd_user }}"
    mode: 0644
  with_items:
  - { src: "{{ inventory_dir }}/{{ root_cert }}", dest: "{{ etcd_home }}/ssl/ca.pem" }
  - { src: "{{ inventory_dir }}/{{ root_key }}", dest: "{{ etcd_home }}/ssl/key.pem" }
  - { src: "vica-config.json", dest: "{{ etcd_home }}/ssl/vica-config.json" }


# - name: name
#   shell: |
#     echo {{ oss_bucket_name }}
#     echo /centos9/etcd-{{ etcd_version }}-linux-amd64.tar.gz

# - name: Copy etcd x86_64
#   oss_file:
#     oss_bucket: "{{ oss_bucket_name }}"
#     object: "/centos9/etcd-{{ etcd_version }}-linux-amd64.tar.gz"
#     dest: "/root/soft/etcd-{{ etcd_version }}-linux.tar.gz"
#     mode: get
#   when: " ansible_architecture == 'x86_64' "

# - name: Copy etcd ARM
#   oss_file:
#     oss_bucket: "{{ oss_bucket_name }}"
#     object: "/centos9/etcd-{{ etcd_version }}-linux-arm64.tar.gz"
#     dest: "/root/soft/etcd-{{ etcd_version }}-linux.tar.gz"
#     mode: get
#   when: " ansible_architecture == 'aarch64' "

# - name: Copy cfssl x86_64
#   oss_file:
#     oss_bucket: "{{ oss_bucket_name }}"
#     object: "/centos9/cfssl.zip"
#     dest: "/root/soft/cfssl.zip"
#     mode: get
#   when: " ansible_architecture == 'x86_64' "

# - name: Install cfssl tools
#   ansible.builtin.unarchive:
#     src: "roles/kubernetes/files/cfssl_1.6.5_linux_{{ansible_architecture}}.tar.gz"
#     dest: "/tmp/"
#     owner: root
#     group: root
#     remote_src: no


# - name: Install cfssl tools ARM64
#   ansible.builtin.unarchive:
#     src: "roles/kubernetes/files/cfssl_1.6.5_linux_arm64.tar.gz"
#     dest: "/tmp/"
#     owner: root
#     group: root
#     remote_src: no
#   when: " ansible_architecture == 'aarch64' "



# - name: Copy cfssl ARM
#   oss_file:
#     oss_bucket: "{{ oss_bucket_name }}"
#     object: "/centos9/cfssl.arm64.zip"
#     dest: "/root/soft/cfssl.zip"
#     mode: get
#   when: " ansible_architecture == 'aarch64' "


# - name: Copy etcd gz to remote
#   ansible.builtin.unarchive:
#     src: "{{role_path}}/files/etcd-{{ etcd_version }}-linux-{{ansible_architecture}}.tar.gz"
#     dest: "/tmp/"
#     owner: "{{ etcd_user }}"
#     group: "{{ etcd_user }}"
#     remote_src: no

# - name: Copy etcd gz to remote ARM64
#   ansible.builtin.unarchive:
#     src: "{{role_path}}/files/etcd-{{ etcd_version }}-linux-arm64.tar.gz"
#     dest: "/tmp/"
#     owner: "{{ etcd_user }}"
#     group: "{{ etcd_user }}"
#     remote_src: no
#   when: " ansible_architecture == 'aarch64' "



# - name: Adjust binary installed dirctory
#   shell: |
#     mv -f /tmp/cfssl/* /usr/local/bin/
#     mv -f /tmp/etcd-{{ etcd_version }}-linux-*/etcd* {{ etcd_home }}/bin/
#     rm -fr /tmp/cfssl
#     rm -fr /tmp/etcd-{{ etcd_version }}-linux-*


- name: Install Etcd Binary
  shell: |
    tar --strip-components=1 -xf /tmp/etcd-{{ etcd_version }}-linux-{{ arch_alias }}.tar.gz -C {{ etcd_home }}/bin/
    rm -fr {{ etcd_home }}/bin/README* {{ etcd_home }}/bin/Documentation*
    export PATH=$PATH:/usr/local/bin
    cd {{ etcd_home }}/ssl/
    cfssl gencert -ca=ca.pem -ca-key=key.pem -config=vica-config.json etcd-csr.json  | cfssljson -bare etcd
    rm -rf key.pem
    ln -sf {{ etcd_home }}/bin/etcdctl /usr/local/bin/
    chown -R {{ etcd_user }}.{{ etcd_user }}  {{ etcd_home }}
  notify:
  - reload systemd
  - start etcd
  - wait etcd service started
  - check etcd service started
  - check etcd cluster healthly 
  - etcd cluster status