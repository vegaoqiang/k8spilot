---

- name: Check Etcd {{ etcd_version }} File Exists
  ansible.builtin.stat:
    path: "{{ component_path }}/etcd-{{ etcd_version }}-linux-{{ arch_alias }}.tar.gz"
  register: etcd_stat

- name: Downloading Etcd {{ etcd_version }}
  amazon.aws.s3_object:
    endpoint_url: "{{ s3_endpoint_url }}"
    access_key: "{{ s3_access_key }}"
    secret_key: "{{ s3_secret_key }}"
    bucket: "{{ s3_bucket_name }}"
    object: "etcd/{{ etcd_version }}/linux/{{ arch_alias }}/etcd-{{ etcd_version }}-linux-{{ arch_alias }}.tar.gz"
    dest: "{{ component_path }}/etcd-{{ etcd_version }}-linux-{{ arch_alias }}.tar.gz"
    mode: get
    overwrite: different
  delegate_to: localhost
  run_once: true
  retries: 5
  delay: 10
  when: etcd_stat.stat.exists == false

- name: Copy Etcd {{ etcd_version }} Binary To Remote Host
  ansible.builtin.copy:
    src: "{{ component_path }}/etcd-{{ etcd_version }}-linux-{{ arch_alias }}.tar.gz"
    dest: "/tmp/etcd-{{ etcd_version }}-linux-{{ arch_alias }}.tar.gz"

- name: Create Etcd User
  user:
    name: "{{ etcd_user }}"
    home: "{{ etcd_home }}"
    shell: /sbin/nologin
    system: yes

- name: Create Etcd Group
  group:
    name: "{{ etcd_user }}"
    system: yes

- name: Create Etcd Dirctory
  file: 
    path: "{{ etcd_home }}/{{item}}"
    state: directory
    mode: 0755 
    recurse: yes
    owner: "{{ etcd_user }}"
    group: "{{ etcd_user }}"
  with_items:
  - 'bin'
  - 'data'
  - 'etc'
  - 'ssl'

- name: Make Etcd Config
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ etcd_user }}"
    group: "{{ etcd_user }}"
    mode: 0644
  with_items:
  - { src: "etcd.service.j2", dest: "/usr/lib/systemd/system/etcd.service" }
  - { src: "etcd.conf.yaml", dest: "{{ etcd_home }}/etc/etcd.conf.yaml" }
  - { src: "etcd-csr.json", dest: "{{ etcd_home }}/ssl/etcd-csr.json" }
  tags: conf


- name: Copy SSL And Config
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ etcd_user }}"
    group: "{{ etcd_user }}"
    mode: 0644
  with_items:
  - { src: "{{ playbook_dir }}/ca/{{ root_cert }}", dest: "{{ etcd_home }}/ssl/ca.pem" }
  - { src: "{{ playbook_dir }}/ca/{{ root_key }}", dest: "{{ etcd_home }}/ssl/key.pem" }
  - { src: "ca-config.json", dest: "{{ etcd_home }}/ssl/ca-config.json" }


- name:  Install Etcd Binary On Remote Host
  uncompress:
    src: "/tmp/etcd-{{ etcd_version }}-linux-{{ arch_alias }}.tar.gz"
    dest: "{{ etcd_home }}/bin"
    strip_components: 1
    owner: "{{ etcd_user }}"
    group: "{{ etcd_user }}"
    mode: "0755"
    include:
      - etcd
      - etcdctl

- name: Create Etcd Cluster Certificates
  ansible.builtin.shell: |
    cfssl gencert -ca=ca.pem -ca-key=key.pem -config=ca-config.json etcd-csr.json  | cfssljson -bare etcd
    chown -R {{ etcd_user }}.{{ etcd_user }}  {{ etcd_home }}/ssl
  args:
    chdir: "{{ etcd_home }}/ssl"
  notify:
  - Start And Enable Etcd Service
  - Wait Etcd Service Started
  - Check Etcd Cluster Healthly
  - Print Etcd Cluster Status
