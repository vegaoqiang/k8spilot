
# - name: Transfor ConfigMap To Control Plane
#   ansible.builtin.template:
#     src: tigera-configmap.yaml.j2
#     dest: /tmp/tigera-configmap.yaml


# - name: Apply Tigera ConfigMap
#   ansible.builtin.shell: |
#     kubectl create namespace tigera-operator
#     kubectl apply -f /tmp/tigera-configmap.yaml
#     rm -f /tmp/tigera-configmap.yaml


- name: Downloading tigera-operator Helm Chart
  amazon.aws.s3_object:
    endpoint_url: "{{ s3_endpoint_url }}"
    access_key: "{{ s3_access_key }}"
    secret_key: "{{ s3_secret_key }}"
    bucket: "{{ s3_bucket_name }}"
    object: "tigera-operator/tigera-operator-{{ calico_version }}.tgz"
    dest: "{{ playbook_dir }}/.ansible_temp/tigera-operator-{{ calico_version }}.tgz"
    mode: get
    overwrite: different
  delegate_to: localhost
  run_once: true

- name: Copy tigera-operator Helm Chart To Remote Host
  ansible.builtin.copy:
    src: "{{ playbook_dir }}/.ansible_temp/tigera-operator-{{ calico_version }}.tgz"
    dest: "/tmp/tigera-operator-{{ calico_version }}.tgz"


- name: Install Calico
  kubernetes.core.helm:
    chart_ref: "/tmp/tigera-operator-{{ calico_version }}.tgz"
    name: calico
    chart_version: "{{ calico_version }}"
    wait: false
    # state: absent
    release_namespace: tigera-operator
    create_namespace: true
    values:
      installation:
        calicoNetwork:
          linuxDataplane: BPF
          bgp: Disabled
          ipPools:
            - encapsulation: VXLANCrossSubnet
              cidr: "{{ kube_pod_ip_range }}"
        registry: "{{ calico_installation_registry }}"
        controlPlaneReplicas: 1
      apiServer:
        enabled: false
      goldmane:
        enabled: false
      whisker:
        enabled: false
      kubernetesServiceEndpoint:
        host: "{{ ansible_default_ipv4.address }}"
        port: "6443"
      kubeletVolumePluginPath: None
